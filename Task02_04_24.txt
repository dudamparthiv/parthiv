Task1 : (Nested if)

    class NestedIf{
        public static void main(String args[]){
            int a = 10 , b = 20 ;
            if( a == 10){
                if(b == 30){
                    System.out.println("a = " + a);
                    System.out.println("a = " + a);   
                }
                else{
                    System.out.println("a = " + a);
                }
            }
            else{
                System.out.println("b = " + b);   
            }
        }
    }
    // Output :
        // a = 10

Task2 : (When for loop becomes infinite)

    In Java, a for loop becomes infinite when its condition always evaluates to true.

    1.By providing true as the condition in the for loop, we ensure that the loop runs indefinitely.
        
        class ForLoop{
            public static void main(String args[]){
                for(;true;){
                    System.out.println("hello");
                }
            }
        }
        // Output :
            // hello
            // hello
            // hello
            // .
            // .
            // .

    2.Instead of true, we can use a condition that always evaluates to true, such as 1 == 1 or 0 == 0
        
        class ForLoop{
            public static void main(String args[]){
                for(;1 == 1;){
                    System.out.println("hello");
                }
            }
        }
        // Output :
            // hello
            // hello
            // hello
            // .
            // .
            // .

    3.If you forget to update the variables participating in the condition,you might end up with an infinite loop.

        class ForLoop{
            public static void main(String args[]){
                for(int i = 10;i > 0;){
                    System.out.println("hello");
                }
            }
        }
        // Output :
            // hello
            // hello
            // hello
            // .
            // .
            // .