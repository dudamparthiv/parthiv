Task1 : (purpose of making constructor as private)

    In Java, we can declare a constructor as private using the pirvate access specifier. If a constructor is declared private, we      
    can't create an object of the class, except within the class.

    A private constructor is used when we want to limit the way objects of a class are instantiated.
    
        package in.java.practice;

        public class TestConstEg {
        
	        int a;
            
	        private TestConstEg(int a) {
		        this.a = a;
	        }

	        public static void main(String[] args) {
		        TestConstEg obj = new TestConstEg(20);
		        System.out.println(obj.a);	

	        }

        }
        //Output :
	        //20

Task2 : (can i make constructor as final - impact)

    Constructor cannot be final

        package in.java.practice;

        public class ConstEg1 {
        	int a ;
        	final private ConstEg1() {
        		System.out.println("final constructor");
        		
        	}
        	public static void main(String[] args) {
        		ConstEg1 obj = new ConstEg1();
        		System.out.println(obj.a);
        	}
        	
        
        }
        //Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
        //	Illegal modifier for the constructor in type ConstEg1; only public, protected & private are permitted
        //
        //	at javaPractice/in.java.practice.ConstEg1.<init>(ConstEg1.java:5)
        //	at javaPractice/in.java.practice.ConstEg1.main(ConstEg1.java:10)

Task3 : (if a keep int nearby constructor - what happens)

    If we keep int nearby constructor,it will be treated as normal method rather than constructor

        class ConsEg{

            int i = 100; 
        
            int ConsEg(){
                System.out.println("Hello");
                return i;
            }
            public static void main(String[] args){
                ConsEg obj = new ConsEg();
                System.out.println(obj.ConsEg());
            }
        }
        // javac ConsEg.java
        // javap ConsEg
            // Compiled from "ConsEg.java"
            // class ConsEg {
            //   int i;
            //   ConsEg();
            //   int ConsEg();
            //   public static void main(java.lang.String[]);
            // }
        
        // Output : 
            // Hello
            //  100

Task4 : (class emp, in main meth - if a craete 5 obj - it should print 5 as o/p)

    class Emp{
    
        private static int i = 0;
    
        public static void main(String[] args){
            Emp obj1 = new Emp();
            Emp.i += 1;
            Emp obj2 = new Emp();
            Emp.i += 1;
            Emp obj3 = new Emp();
            Emp.i += 1;
            Emp obj4 = new Emp();
            Emp.i += 1;
            Emp obj5 = new Emp();
            Emp.i += 1;
            System.out.println(Emp.i);
        }
    }
    // Output : 
        // 5

Task5 :Write a Java program to create and display a unique three-digit number using 1, 2, 3, 4. Also count how many three-digit numbers are there.
123 143 132 134 241 234 132 342 .... ....

    class UniqueThreeDigit{
        public static void main(String[] args){
            int n = 0;
    
            for(int i = 1;i <= 4;i++){
                for(int j = 1;j <=4;j++){
                    for(int k = 1;k <= 4;k++){
                        if(k != i && k != j && i != j){
                            n++;
                            System.out.print(i+""+j+""+k+" ");
                        }  
                    }     
                }
            }
        }
    }
    // Output :
        // 123 124 132 134 142 143 213 214 231 234 241 243 312 314 321 324 341 342 412 413 421 423 431 432

Task6 : Write a Java program to print odd numbers from 1 to 99. Prints one number per line.

    class OddNum{
        public static void main(String[] args){
            for(int i=1;i<=99;i++){
                if(i % 2 != 0){
                    System.out.println(i);
                }
            }
        }
    
    }
    //Output :
        // 1
        // 3
        // 5
        // 7
        // 9
        // 11
        // 13
        // .
        // .
        // .    
        // 89
        // 91
        // 93
        // 95
        // 97
        // 99

Task7 : Write a Java program that accepts an integer (n) and computes the value of n+nn+nnn. Sample Output: Input number: 5
5 + 55 + 555

    class SumOfN{
        public static void main(String[] args){
            int n = 5;
            int nn = n * 10 + n;
            int nnn = nn * 10 + n;
    
            int sum = n + nn + nnn;
            System.out.println(n + "+" + nn + "+" + nnn + "=" + sum);
        }
    }
    // Output :
        // 5+55+555=615